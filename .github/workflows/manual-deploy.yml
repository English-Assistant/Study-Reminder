name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      tag_to_deploy:
        description: 'The git tag to deploy (e.g., v1.2.3). This will be used for Docker image tagging and checkout.'
        required: true
        type: string

jobs:
  manual_deploy_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag_to_deploy }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Check Docker Hub credentials
        id: check-credentials
        run: |
          if [[ -n "${{ secrets.DOCKER_HUB_USERNAME }}" && -n "${{ secrets.DOCKER_HUB_TOKEN }}" ]]; then
            echo "has_credentials=true" >> $GITHUB_OUTPUT
            echo "✅ Docker Hub 凭据已配置"
          else
            echo "has_credentials=false" >> $GITHUB_OUTPUT
            echo "⚠️  Docker Hub 凭据未配置，将跳过推送步骤"
            echo "📋 请在 GitHub Secrets 中设置："
            echo "   - DOCKER_HUB_USERNAME"
            echo "   - DOCKER_HUB_TOKEN"
          fi

      - name: Login to Docker Hub
        if: steps.check-credentials.outputs.has_credentials == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push all images
        if: steps.check-credentials.outputs.has_credentials == 'true'
        run: |
          echo "🚀 Building all services with version: ${{ github.event.inputs.tag_to_deploy }}"
          pnpm run deploy:push
        env:
          DOCKER_BUILDKIT: 1
          RELEASE_TAG: ${{ github.event.inputs.tag_to_deploy }}

      - name: Prepare Version Number
        id: version_prep
        run: |
          VERSION_WITH_V="${{ github.event.inputs.tag_to_deploy }}"
          # Remove 'v' prefix if it exists
          VERSION_NO_V="${VERSION_WITH_V#v}"
          echo "VERSION_NO_V=$VERSION_NO_V" >> $GITHUB_OUTPUT
          echo "Original tag: $VERSION_WITH_V, Version without v: $VERSION_NO_V"

      - name: Deployment Summary
        run: |
          echo "✅ 部署完成！"
          echo "🏷️  Release Tag: ${{ github.event.inputs.tag_to_deploy }}"
          echo "📦 生成的镜像:"
          echo "   前端镜像:"
          echo "   - boses/study-reminder-front:latest"
          echo "   - boses/study-reminder-front:${{ steps.version_prep.outputs.VERSION_NO_V }}"
          echo "   后端镜像:"
          echo "   - boses/study-reminder-backend:latest"
          echo "   - boses/study-reminder-backend:${{ steps.version_prep.outputs.VERSION_NO_V }}"
          echo ""
          if [[ "${{ steps.check-credentials.outputs.has_credentials }}" == "true" ]]; then
            echo "🚀 镜像已推送到 Docker Hub，使用以下命令部署："
            echo "   docker pull boses/study-reminder-front:${{ steps.version_prep.outputs.VERSION_NO_V }}"
            echo "   docker pull boses/study-reminder-backend:${{ steps.version_prep.outputs.VERSION_NO_V }}"
          else
            echo "🔧 镜像仅本地构建完成，手动推送命令："
            echo "   docker login"
            echo "   docker push boses/study-reminder-front:${{ steps.version_prep.outputs.VERSION_NO_V }}"
            echo "   docker push boses/study-reminder-backend:${{ steps.version_prep.outputs.VERSION_NO_V }}"
          fi

      - name: Trigger Deploy
        if: steps.check-credentials.outputs.has_credentials == 'true' && secrets.DEPLOY_SERVER_URL != '' && secrets.DEPLOY_TOKEN != ''
        run: |
          echo "Attempting to trigger deployment for tag: ${{ steps.version_prep.outputs.VERSION_NO_V }}"
          curl -X POST "${{ secrets.DEPLOY_SERVER_URL }}" \
            -H "Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"tag\": \"${{ steps.version_prep.outputs.VERSION_NO_V }}\"}"
