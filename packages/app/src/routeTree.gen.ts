/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as CoreImport } from './routes/_core'
import { Route as IndexImport } from './routes/index'
import { Route as CoreSetUpImport } from './routes/_core/set-up'
import { Route as CoreAboutImport } from './routes/_core/about'
import { Route as CoreStudyRecordsIndexImport } from './routes/_core/study-records/index'
import { Route as CoreDashboardIndexImport } from './routes/_core/dashboard/index'
import { Route as CoreCoursesIndexImport } from './routes/_core/courses/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CoreRoute = CoreImport.update({
  id: '/_core',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CoreSetUpRoute = CoreSetUpImport.update({
  id: '/set-up',
  path: '/set-up',
  getParentRoute: () => CoreRoute,
} as any)

const CoreAboutRoute = CoreAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => CoreRoute,
} as any)

const CoreStudyRecordsIndexRoute = CoreStudyRecordsIndexImport.update({
  id: '/study-records/',
  path: '/study-records/',
  getParentRoute: () => CoreRoute,
} as any)

const CoreDashboardIndexRoute = CoreDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => CoreRoute,
} as any)

const CoreCoursesIndexRoute = CoreCoursesIndexImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => CoreRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_core': {
      id: '/_core'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CoreImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_core/about': {
      id: '/_core/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof CoreAboutImport
      parentRoute: typeof CoreImport
    }
    '/_core/set-up': {
      id: '/_core/set-up'
      path: '/set-up'
      fullPath: '/set-up'
      preLoaderRoute: typeof CoreSetUpImport
      parentRoute: typeof CoreImport
    }
    '/_core/courses/': {
      id: '/_core/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoreCoursesIndexImport
      parentRoute: typeof CoreImport
    }
    '/_core/dashboard/': {
      id: '/_core/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof CoreDashboardIndexImport
      parentRoute: typeof CoreImport
    }
    '/_core/study-records/': {
      id: '/_core/study-records/'
      path: '/study-records'
      fullPath: '/study-records'
      preLoaderRoute: typeof CoreStudyRecordsIndexImport
      parentRoute: typeof CoreImport
    }
  }
}

// Create and export the route tree

interface CoreRouteChildren {
  CoreAboutRoute: typeof CoreAboutRoute
  CoreSetUpRoute: typeof CoreSetUpRoute
  CoreCoursesIndexRoute: typeof CoreCoursesIndexRoute
  CoreDashboardIndexRoute: typeof CoreDashboardIndexRoute
  CoreStudyRecordsIndexRoute: typeof CoreStudyRecordsIndexRoute
}

const CoreRouteChildren: CoreRouteChildren = {
  CoreAboutRoute: CoreAboutRoute,
  CoreSetUpRoute: CoreSetUpRoute,
  CoreCoursesIndexRoute: CoreCoursesIndexRoute,
  CoreDashboardIndexRoute: CoreDashboardIndexRoute,
  CoreStudyRecordsIndexRoute: CoreStudyRecordsIndexRoute,
}

const CoreRouteWithChildren = CoreRoute._addFileChildren(CoreRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof CoreRouteWithChildren
  '/login': typeof LoginRoute
  '/about': typeof CoreAboutRoute
  '/set-up': typeof CoreSetUpRoute
  '/courses': typeof CoreCoursesIndexRoute
  '/dashboard': typeof CoreDashboardIndexRoute
  '/study-records': typeof CoreStudyRecordsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof CoreRouteWithChildren
  '/login': typeof LoginRoute
  '/about': typeof CoreAboutRoute
  '/set-up': typeof CoreSetUpRoute
  '/courses': typeof CoreCoursesIndexRoute
  '/dashboard': typeof CoreDashboardIndexRoute
  '/study-records': typeof CoreStudyRecordsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_core': typeof CoreRouteWithChildren
  '/login': typeof LoginRoute
  '/_core/about': typeof CoreAboutRoute
  '/_core/set-up': typeof CoreSetUpRoute
  '/_core/courses/': typeof CoreCoursesIndexRoute
  '/_core/dashboard/': typeof CoreDashboardIndexRoute
  '/_core/study-records/': typeof CoreStudyRecordsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/about'
    | '/set-up'
    | '/courses'
    | '/dashboard'
    | '/study-records'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/about'
    | '/set-up'
    | '/courses'
    | '/dashboard'
    | '/study-records'
  id:
    | '__root__'
    | '/'
    | '/_core'
    | '/login'
    | '/_core/about'
    | '/_core/set-up'
    | '/_core/courses/'
    | '/_core/dashboard/'
    | '/_core/study-records/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CoreRoute: typeof CoreRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CoreRoute: CoreRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_core",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_core": {
      "filePath": "_core.tsx",
      "children": [
        "/_core/about",
        "/_core/set-up",
        "/_core/courses/",
        "/_core/dashboard/",
        "/_core/study-records/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_core/about": {
      "filePath": "_core/about.tsx",
      "parent": "/_core"
    },
    "/_core/set-up": {
      "filePath": "_core/set-up.tsx",
      "parent": "/_core"
    },
    "/_core/courses/": {
      "filePath": "_core/courses/index.tsx",
      "parent": "/_core"
    },
    "/_core/dashboard/": {
      "filePath": "_core/dashboard/index.tsx",
      "parent": "/_core"
    },
    "/_core/study-records/": {
      "filePath": "_core/study-records/index.tsx",
      "parent": "/_core"
    }
  }
}
ROUTE_MANIFEST_END */
