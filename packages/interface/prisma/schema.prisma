// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Prisma 客户端生成器配置
generator client {
  provider = "prisma-client-js"
}

// 数据源配置
datasource db {
  provider = "postgresql" // 指定数据库类型为 PostgreSQL
  url      = env("DATABASE_URL") // 从环境变量 DATABASE_URL 读取数据库连接字符串
}

// --------------- 枚举类型 (ENUMS) ------------------

// 复习规则的时间单位
enum ReviewRuleUnit {
  MINUTES // 分钟
  HOURS // 小时
  DAYS // 天
  MONTHS // 月
}

// 复习规则的重复类型
enum ReviewRuleRepetition {
  ONCE // 一次性
  LOOP // 循环
}

// --------------- 数据模型 (MODELS) ------------------

// 用户模型
model User {
  id        String   @id @default(uuid()) // 用户ID，主键，默认为 UUID
  username  String   @unique // 用户名，唯一
  password  String // 密码 (存储时应为哈希后的密码)
  createdAt DateTime @default(now()) // 创建时间，默认为当前时间
  updatedAt DateTime @updatedAt // 更新时间，自动更新

  // --- 新增用户通知偏好设置字段 ---
  email                      String? @unique // 用户邮箱, 用于邮件通知
  globalNotificationsEnabled Boolean @default(true) // 全局通知总开关
  emailNotificationsEnabled  Boolean @default(true) // 邮件通知开关
  appNotificationsEnabled    Boolean @default(true) // 应用内/浏览器通知开关
  // --- 结束新增字段 ---

  // 关联关系
  courses             Course[] // 用户创建的课程列表
  reviewRules         ReviewRule[] // 用户自定义的复习规则列表 (如果允许用户覆盖全局规则)
  manualReviewEntries ManualReviewEntry[] // 用户手动添加的复习条目
  UserGlobalSettings  UserGlobalSettings?
}

// 课程模型
model Course {
  id          String   @id @default(uuid()) // 课程ID，主键，默认为 UUID
  name        String // 课程名称
  description String? // 课程描述 (可选)
  color       String // 课程颜色标记 (例如十六进制颜色码或颜色名称)
  userId      String // 创建该课程的用户ID (外键)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade) // 关联到 User 模型，用户删除时级联删除其课程
  createdAt   DateTime @default(now()) // 创建时间
  updatedAt   DateTime @updatedAt // 更新时间

  // 关联关系
  manualReviewEntries ManualReviewEntry[] // 与该课程相关的手动复习条目
  rules               ReviewRule[] // 应用于该课程的复习规则
}

// 复习规则模型
model ReviewRule {
  id          String               @id @default(uuid()) // 规则ID，主键，默认为 UUID
  value       Int // 时间间隔值 (例如：20, 1, 2)
  unit        ReviewRuleUnit // 时间单位 (MINUTES, HOURS, DAYS, MONTHS)
  repetition  ReviewRuleRepetition // 重复类型 (ONCE, LOOP)
  description String? // 规则描述 (可选，例如 "艾宾浩斯第1周期")
  createdAt   DateTime             @default(now()) // 创建时间
  updatedAt   DateTime             @updatedAt // 更新时间

  // 关联到用户全局设置
  globalSettingsId String // 外键，指向 UserGlobalSettings 模型
  globalSettings   UserGlobalSettings @relation(fields: [globalSettingsId], references: [id], onDelete: Cascade)
  User             User?              @relation(fields: [userId], references: [id])
  userId           String?
  Course           Course?            @relation(fields: [courseId], references: [id])
  courseId         String?
}

// 手动复习条目模型
model ManualReviewEntry {
  id             String    @id @default(uuid()) // 条目ID，主键，默认为 UUID
  userId         String // 用户ID (外键)
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade) // 关联到 User 模型
  courseId       String // 课程ID (外键), 与特定课程关联
  course         Course    @relation(fields: [courseId], references: [id], onDelete: Cascade) // 关联到 Course 模型
  title          String // 复习条目标题
  description    String? // 复习条目描述 (可选)
  reviewDate     DateTime // 计划复习的日期
  reviewTime     String? // 具体的复习时间 (可选, 例如 "14:30")
  lastNotifiedAt DateTime? // 上次通知时间 (可选)
  createdAt      DateTime  @default(now()) // 创建时间
  updatedAt      DateTime  @updatedAt // 更新时间
}

// 用户全局设置模型
model UserGlobalSettings {
  id                 String       @id @default(uuid())
  user               User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String       @unique
  enabled            Boolean      @default(true)
  emailNotifications Boolean      @default(false)
  appNotifications   Boolean      @default(true)
  reviewRules        ReviewRule[] // Prisma 会自动处理反向关系，如果需要显式命名，之前的方式也可

  createdAt DateTime @default(now())
}
